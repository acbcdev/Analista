name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_ENV: development

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install --frozen-lockfile
      
    - name: Run Biome check
      run: bun run check
      
    - name: Check formatting
      run: bun run format
      
    - name: Run linting
      run: bun run lint


  build-test:
    runs-on: ubuntu-latest
    needs: [lint-and-format]
    
    strategy:
      matrix:
        browser: [chrome, firefox]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install --frozen-lockfile
      
    - name: Build extension for ${{ matrix.browser }}
      run: |
        if [ "${{ matrix.browser }}" = "firefox" ]; then
          bun run build:firefox
        else
          bun run build
        fi
        
    - name: Verify build output
      run: |
        echo "Checking build output..."
        ls -la .output/
        
        # Determine the correct output directory based on browser
        if [ "${{ matrix.browser }}" = "firefox" ]; then
          OUTPUT_DIR=".output/firefox-mv2"
        else
          OUTPUT_DIR=".output/chrome-mv3"
        fi
        
        echo "Checking $OUTPUT_DIR for ${{ matrix.browser }} build..."
        ls -la "$OUTPUT_DIR/"
        
        # Check if manifest exists in the correct directory
        if [ ! -f "$OUTPUT_DIR/manifest.json" ]; then
          echo "❌ manifest.json not found in $OUTPUT_DIR"
          exit 1
        fi
        
        # Additional checks for required files
        if [ ! -f "$OUTPUT_DIR/background.js" ]; then
          echo "❌ background.js not found in $OUTPUT_DIR"
          exit 1
        fi
        
        if [ ! -f "$OUTPUT_DIR/popup.html" ]; then
          echo "❌ popup.html not found in $OUTPUT_DIR"
          exit 1
        fi
        
        echo "✅ Build completed successfully for ${{ matrix.browser }}"
        echo "✅ All required files present in $OUTPUT_DIR"
        
    - name: Upload build for review
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.browser }}-${{ github.sha }}
        path: |
          .output/${{ matrix.browser == 'firefox' && 'firefox-mv2' || 'chrome-mv3' }}/
        retention-days: 7

  auto-merge:
    runs-on: ubuntu-latest
    needs: build-test
    if: |
      github.event_name == 'pull_request' && 
      github.actor == 'dependabot[bot]' &&
      github.event.pull_request.draft == false
      
    permissions:
      contents: write
      pull-requests: write
      
    steps:
    - name: Enable auto-merge for Dependabot PRs
      run: gh pr merge --auto --merge "$PR_URL"
      env:
        PR_URL: ${{ github.event.pull_request.html_url }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
