name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get version
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install --frozen-lockfile
      
    - name: Build extension for Chrome
      run: bun run build
      
    - name: Build extension for Firefox
      run: bun run build:firefox
        
    - name: Verify builds before zipping
      run: |
        echo "Verifying Chrome build..."
        ls -la ".output/chrome-mv3/"
        
        if [ ! -f ".output/chrome-mv3/manifest.json" ]; then
          echo "❌ Chrome build verification failed"
          exit 1
        fi
        
        echo "Verifying Firefox build..."
        ls -la ".output/firefox-mv2/"
        
        if [ ! -f ".output/firefox-mv2/manifest.json" ]; then
          echo "❌ Firefox build verification failed"
          exit 1
        fi
        
        echo "✅ Both builds verified successfully"
        
    - name: Create ZIP files
      run: |
        # Create Chrome ZIP
        bun run zip
        mv *.zip analista-extension-chrome.zip
        
        # Create Firefox ZIP  
        bun run zip:firefox
        mv *.zip analista-extension-firefox.zip
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        name: Analista Extension ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## Changes
          
          * Extension build for Chrome and Firefox
          * Auto-generated release from GitHub Actions
          
          ## Installation
          
          ### Chrome/Chromium:
          1. Download `analista-extension-chrome.zip`
          2. Extract the ZIP file
          3. Open Chrome and go to `chrome://extensions/`
          4. Enable "Developer mode"
          5. Click "Load unpacked" and select the extracted folder
          
          ### Firefox:
          1. Download `analista-extension-firefox.zip`
          2. Extract the ZIP file
          3. Open Firefox and go to `about:debugging`
          4. Click "This Firefox"
          5. Click "Load Temporary Add-on" and select the manifest.json file
        files: |
          analista-extension-chrome.zip
          analista-extension-firefox.zip
        draft: false
        prerelease: false
